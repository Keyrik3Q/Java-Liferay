/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ispace.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import ispace.model.VanBanDen;
import ispace.model.VanBanDenModel;
import ispace.model.VanBanDenSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the VanBanDen service. Represents a row in the &quot;vanbanden&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ispace.model.VanBanDenModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VanBanDenImpl}.
 * </p>
 *
 * @author hungt
 * @see VanBanDenImpl
 * @see ispace.model.VanBanDen
 * @see ispace.model.VanBanDenModel
 * @generated
 */
@JSON(strict = true)
public class VanBanDenModelImpl extends BaseModelImpl<VanBanDen>
	implements VanBanDenModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a van ban den model instance should use the {@link ispace.model.VanBanDen} interface instead.
	 */
	public static final String TABLE_NAME = "vanbanden";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "sokihieu", Types.VARCHAR },
			{ "loaivanban", Types.VARCHAR },
			{ "sovanban", Types.VARCHAR },
			{ "nguoiky", Types.VARCHAR },
			{ "ngayky", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table vanbanden (id LONG not null primary key,sokihieu VARCHAR(75) null,loaivanban VARCHAR(75) null,sovanban VARCHAR(75) null,nguoiky VARCHAR(75) null,ngayky DATE null)";
	public static final String TABLE_SQL_DROP = "drop table vanbanden";
	public static final String ORDER_BY_JPQL = " ORDER BY vanBanDen.Id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY vanbanden.id ASC";
	public static final String DATA_SOURCE = "qlvanbanDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.ispace.model.VanBanDen"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.ispace.model.VanBanDen"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VanBanDen toModel(VanBanDenSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		VanBanDen model = new VanBanDenImpl();

		model.setId(soapModel.getId());
		model.setSoKiHieu(soapModel.getSoKiHieu());
		model.setLoaiVanBan(soapModel.getLoaiVanBan());
		model.setSoVanBan(soapModel.getSoVanBan());
		model.setNguoiKy(soapModel.getNguoiKy());
		model.setNgayKy(soapModel.getNgayKy());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VanBanDen> toModels(VanBanDenSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<VanBanDen> models = new ArrayList<VanBanDen>(soapModels.length);

		for (VanBanDenSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.ispace.model.VanBanDen"));

	public VanBanDenModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _Id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _Id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VanBanDen.class;
	}

	@Override
	public String getModelClassName() {
		return VanBanDen.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("Id", getId());
		attributes.put("SoKiHieu", getSoKiHieu());
		attributes.put("LoaiVanBan", getLoaiVanBan());
		attributes.put("SoVanBan", getSoVanBan());
		attributes.put("NguoiKy", getNguoiKy());
		attributes.put("NgayKy", getNgayKy());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long Id = (Long)attributes.get("Id");

		if (Id != null) {
			setId(Id);
		}

		String SoKiHieu = (String)attributes.get("SoKiHieu");

		if (SoKiHieu != null) {
			setSoKiHieu(SoKiHieu);
		}

		String LoaiVanBan = (String)attributes.get("LoaiVanBan");

		if (LoaiVanBan != null) {
			setLoaiVanBan(LoaiVanBan);
		}

		String SoVanBan = (String)attributes.get("SoVanBan");

		if (SoVanBan != null) {
			setSoVanBan(SoVanBan);
		}

		String NguoiKy = (String)attributes.get("NguoiKy");

		if (NguoiKy != null) {
			setNguoiKy(NguoiKy);
		}

		Date NgayKy = (Date)attributes.get("NgayKy");

		if (NgayKy != null) {
			setNgayKy(NgayKy);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _Id;
	}

	@Override
	public void setId(long Id) {
		_Id = Id;
	}

	@JSON
	@Override
	public String getSoKiHieu() {
		if (_SoKiHieu == null) {
			return StringPool.BLANK;
		}
		else {
			return _SoKiHieu;
		}
	}

	@Override
	public void setSoKiHieu(String SoKiHieu) {
		_SoKiHieu = SoKiHieu;
	}

	@JSON
	@Override
	public String getLoaiVanBan() {
		if (_LoaiVanBan == null) {
			return StringPool.BLANK;
		}
		else {
			return _LoaiVanBan;
		}
	}

	@Override
	public void setLoaiVanBan(String LoaiVanBan) {
		_LoaiVanBan = LoaiVanBan;
	}

	@JSON
	@Override
	public String getSoVanBan() {
		if (_SoVanBan == null) {
			return StringPool.BLANK;
		}
		else {
			return _SoVanBan;
		}
	}

	@Override
	public void setSoVanBan(String SoVanBan) {
		_SoVanBan = SoVanBan;
	}

	@JSON
	@Override
	public String getNguoiKy() {
		if (_NguoiKy == null) {
			return StringPool.BLANK;
		}
		else {
			return _NguoiKy;
		}
	}

	@Override
	public void setNguoiKy(String NguoiKy) {
		_NguoiKy = NguoiKy;
	}

	@JSON
	@Override
	public Date getNgayKy() {
		return _NgayKy;
	}

	@Override
	public void setNgayKy(Date NgayKy) {
		_NgayKy = NgayKy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			VanBanDen.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VanBanDen toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VanBanDen)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VanBanDenImpl vanBanDenImpl = new VanBanDenImpl();

		vanBanDenImpl.setId(getId());
		vanBanDenImpl.setSoKiHieu(getSoKiHieu());
		vanBanDenImpl.setLoaiVanBan(getLoaiVanBan());
		vanBanDenImpl.setSoVanBan(getSoVanBan());
		vanBanDenImpl.setNguoiKy(getNguoiKy());
		vanBanDenImpl.setNgayKy(getNgayKy());

		vanBanDenImpl.resetOriginalValues();

		return vanBanDenImpl;
	}

	@Override
	public int compareTo(VanBanDen vanBanDen) {
		long primaryKey = vanBanDen.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VanBanDen)) {
			return false;
		}

		VanBanDen vanBanDen = (VanBanDen)obj;

		long primaryKey = vanBanDen.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<VanBanDen> toCacheModel() {
		VanBanDenCacheModel vanBanDenCacheModel = new VanBanDenCacheModel();

		vanBanDenCacheModel.Id = getId();

		vanBanDenCacheModel.SoKiHieu = getSoKiHieu();

		String SoKiHieu = vanBanDenCacheModel.SoKiHieu;

		if ((SoKiHieu != null) && (SoKiHieu.length() == 0)) {
			vanBanDenCacheModel.SoKiHieu = null;
		}

		vanBanDenCacheModel.LoaiVanBan = getLoaiVanBan();

		String LoaiVanBan = vanBanDenCacheModel.LoaiVanBan;

		if ((LoaiVanBan != null) && (LoaiVanBan.length() == 0)) {
			vanBanDenCacheModel.LoaiVanBan = null;
		}

		vanBanDenCacheModel.SoVanBan = getSoVanBan();

		String SoVanBan = vanBanDenCacheModel.SoVanBan;

		if ((SoVanBan != null) && (SoVanBan.length() == 0)) {
			vanBanDenCacheModel.SoVanBan = null;
		}

		vanBanDenCacheModel.NguoiKy = getNguoiKy();

		String NguoiKy = vanBanDenCacheModel.NguoiKy;

		if ((NguoiKy != null) && (NguoiKy.length() == 0)) {
			vanBanDenCacheModel.NguoiKy = null;
		}

		Date NgayKy = getNgayKy();

		if (NgayKy != null) {
			vanBanDenCacheModel.NgayKy = NgayKy.getTime();
		}
		else {
			vanBanDenCacheModel.NgayKy = Long.MIN_VALUE;
		}

		return vanBanDenCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{Id=");
		sb.append(getId());
		sb.append(", SoKiHieu=");
		sb.append(getSoKiHieu());
		sb.append(", LoaiVanBan=");
		sb.append(getLoaiVanBan());
		sb.append(", SoVanBan=");
		sb.append(getSoVanBan());
		sb.append(", NguoiKy=");
		sb.append(getNguoiKy());
		sb.append(", NgayKy=");
		sb.append(getNgayKy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("ispace.model.VanBanDen");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>Id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SoKiHieu</column-name><column-value><![CDATA[");
		sb.append(getSoKiHieu());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LoaiVanBan</column-name><column-value><![CDATA[");
		sb.append(getLoaiVanBan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>SoVanBan</column-name><column-value><![CDATA[");
		sb.append(getSoVanBan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>NguoiKy</column-name><column-value><![CDATA[");
		sb.append(getNguoiKy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>NgayKy</column-name><column-value><![CDATA[");
		sb.append(getNgayKy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VanBanDen.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			VanBanDen.class
		};
	private long _Id;
	private String _SoKiHieu;
	private String _LoaiVanBan;
	private String _SoVanBan;
	private String _NguoiKy;
	private Date _NgayKy;
	private VanBanDen _escapedModel;
}