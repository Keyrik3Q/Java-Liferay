/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package ispace.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import ispace.model.LuanChuyen;
import ispace.model.LuanChuyenModel;
import ispace.model.LuanChuyenSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LuanChuyen service. Represents a row in the &quot;luanchuyen&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ispace.model.LuanChuyenModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LuanChuyenImpl}.
 * </p>
 *
 * @author hungt
 * @see LuanChuyenImpl
 * @see ispace.model.LuanChuyen
 * @see ispace.model.LuanChuyenModel
 * @generated
 */
@JSON(strict = true)
public class LuanChuyenModelImpl extends BaseModelImpl<LuanChuyen>
	implements LuanChuyenModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a luan chuyen model instance should use the {@link ispace.model.LuanChuyen} interface instead.
	 */
	public static final String TABLE_NAME = "luanchuyen";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id", Types.BIGINT },
			{ "kieuvanban", Types.VARCHAR },
			{ "idvanban", Types.BIGINT },
			{ "ngaygui", Types.TIMESTAMP },
			{ "ngaynhan", Types.TIMESTAMP },
			{ "nguoigui", Types.VARCHAR },
			{ "nguoinhan", Types.VARCHAR },
			{ "ykien", Types.VARCHAR },
			{ "hanxuli", Types.TIMESTAMP },
			{ "ykienphanhoi", Types.VARCHAR },
			{ "ngayphanhoi", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table luanchuyen (id LONG not null primary key,kieuvanban VARCHAR(75) null,idvanban LONG,ngaygui DATE null,ngaynhan DATE null,nguoigui VARCHAR(75) null,nguoinhan VARCHAR(75) null,ykien VARCHAR(75) null,hanxuli DATE null,ykienphanhoi VARCHAR(75) null,ngayphanhoi DATE null)";
	public static final String TABLE_SQL_DROP = "drop table luanchuyen";
	public static final String ORDER_BY_JPQL = " ORDER BY luanChuyen.Id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY luanchuyen.id ASC";
	public static final String DATA_SOURCE = "qlvanbanDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.ispace.model.LuanChuyen"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.ispace.model.LuanChuyen"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LuanChuyen toModel(LuanChuyenSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LuanChuyen model = new LuanChuyenImpl();

		model.setId(soapModel.getId());
		model.setKieuVanBan(soapModel.getKieuVanBan());
		model.setIdVanBan(soapModel.getIdVanBan());
		model.setNgayGui(soapModel.getNgayGui());
		model.setNgayNhan(soapModel.getNgayNhan());
		model.setNguoiGui(soapModel.getNguoiGui());
		model.setNguoiNhan(soapModel.getNguoiNhan());
		model.setYKien(soapModel.getYKien());
		model.setHanXuLi(soapModel.getHanXuLi());
		model.setYKienPhanHoi(soapModel.getYKienPhanHoi());
		model.setNgayPhanHoi(soapModel.getNgayPhanHoi());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LuanChuyen> toModels(LuanChuyenSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LuanChuyen> models = new ArrayList<LuanChuyen>(soapModels.length);

		for (LuanChuyenSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.ispace.model.LuanChuyen"));

	public LuanChuyenModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _Id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _Id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LuanChuyen.class;
	}

	@Override
	public String getModelClassName() {
		return LuanChuyen.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("Id", getId());
		attributes.put("KieuVanBan", getKieuVanBan());
		attributes.put("IdVanBan", getIdVanBan());
		attributes.put("NgayGui", getNgayGui());
		attributes.put("NgayNhan", getNgayNhan());
		attributes.put("NguoiGui", getNguoiGui());
		attributes.put("NguoiNhan", getNguoiNhan());
		attributes.put("YKien", getYKien());
		attributes.put("HanXuLi", getHanXuLi());
		attributes.put("YKienPhanHoi", getYKienPhanHoi());
		attributes.put("NgayPhanHoi", getNgayPhanHoi());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long Id = (Long)attributes.get("Id");

		if (Id != null) {
			setId(Id);
		}

		String KieuVanBan = (String)attributes.get("KieuVanBan");

		if (KieuVanBan != null) {
			setKieuVanBan(KieuVanBan);
		}

		Long IdVanBan = (Long)attributes.get("IdVanBan");

		if (IdVanBan != null) {
			setIdVanBan(IdVanBan);
		}

		Date NgayGui = (Date)attributes.get("NgayGui");

		if (NgayGui != null) {
			setNgayGui(NgayGui);
		}

		Date NgayNhan = (Date)attributes.get("NgayNhan");

		if (NgayNhan != null) {
			setNgayNhan(NgayNhan);
		}

		String NguoiGui = (String)attributes.get("NguoiGui");

		if (NguoiGui != null) {
			setNguoiGui(NguoiGui);
		}

		String NguoiNhan = (String)attributes.get("NguoiNhan");

		if (NguoiNhan != null) {
			setNguoiNhan(NguoiNhan);
		}

		String YKien = (String)attributes.get("YKien");

		if (YKien != null) {
			setYKien(YKien);
		}

		Date HanXuLi = (Date)attributes.get("HanXuLi");

		if (HanXuLi != null) {
			setHanXuLi(HanXuLi);
		}

		String YKienPhanHoi = (String)attributes.get("YKienPhanHoi");

		if (YKienPhanHoi != null) {
			setYKienPhanHoi(YKienPhanHoi);
		}

		Date NgayPhanHoi = (Date)attributes.get("NgayPhanHoi");

		if (NgayPhanHoi != null) {
			setNgayPhanHoi(NgayPhanHoi);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _Id;
	}

	@Override
	public void setId(long Id) {
		_Id = Id;
	}

	@JSON
	@Override
	public String getKieuVanBan() {
		if (_KieuVanBan == null) {
			return StringPool.BLANK;
		}
		else {
			return _KieuVanBan;
		}
	}

	@Override
	public void setKieuVanBan(String KieuVanBan) {
		_KieuVanBan = KieuVanBan;
	}

	@JSON
	@Override
	public long getIdVanBan() {
		return _IdVanBan;
	}

	@Override
	public void setIdVanBan(long IdVanBan) {
		_IdVanBan = IdVanBan;
	}

	@JSON
	@Override
	public Date getNgayGui() {
		return _NgayGui;
	}

	@Override
	public void setNgayGui(Date NgayGui) {
		_NgayGui = NgayGui;
	}

	@JSON
	@Override
	public Date getNgayNhan() {
		return _NgayNhan;
	}

	@Override
	public void setNgayNhan(Date NgayNhan) {
		_NgayNhan = NgayNhan;
	}

	@JSON
	@Override
	public String getNguoiGui() {
		if (_NguoiGui == null) {
			return StringPool.BLANK;
		}
		else {
			return _NguoiGui;
		}
	}

	@Override
	public void setNguoiGui(String NguoiGui) {
		_NguoiGui = NguoiGui;
	}

	@JSON
	@Override
	public String getNguoiNhan() {
		if (_NguoiNhan == null) {
			return StringPool.BLANK;
		}
		else {
			return _NguoiNhan;
		}
	}

	@Override
	public void setNguoiNhan(String NguoiNhan) {
		_NguoiNhan = NguoiNhan;
	}

	@JSON
	@Override
	public String getYKien() {
		if (_YKien == null) {
			return StringPool.BLANK;
		}
		else {
			return _YKien;
		}
	}

	@Override
	public void setYKien(String YKien) {
		_YKien = YKien;
	}

	@JSON
	@Override
	public Date getHanXuLi() {
		return _HanXuLi;
	}

	@Override
	public void setHanXuLi(Date HanXuLi) {
		_HanXuLi = HanXuLi;
	}

	@JSON
	@Override
	public String getYKienPhanHoi() {
		if (_YKienPhanHoi == null) {
			return StringPool.BLANK;
		}
		else {
			return _YKienPhanHoi;
		}
	}

	@Override
	public void setYKienPhanHoi(String YKienPhanHoi) {
		_YKienPhanHoi = YKienPhanHoi;
	}

	@JSON
	@Override
	public Date getNgayPhanHoi() {
		return _NgayPhanHoi;
	}

	@Override
	public void setNgayPhanHoi(Date NgayPhanHoi) {
		_NgayPhanHoi = NgayPhanHoi;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			LuanChuyen.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public LuanChuyen toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LuanChuyen)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LuanChuyenImpl luanChuyenImpl = new LuanChuyenImpl();

		luanChuyenImpl.setId(getId());
		luanChuyenImpl.setKieuVanBan(getKieuVanBan());
		luanChuyenImpl.setIdVanBan(getIdVanBan());
		luanChuyenImpl.setNgayGui(getNgayGui());
		luanChuyenImpl.setNgayNhan(getNgayNhan());
		luanChuyenImpl.setNguoiGui(getNguoiGui());
		luanChuyenImpl.setNguoiNhan(getNguoiNhan());
		luanChuyenImpl.setYKien(getYKien());
		luanChuyenImpl.setHanXuLi(getHanXuLi());
		luanChuyenImpl.setYKienPhanHoi(getYKienPhanHoi());
		luanChuyenImpl.setNgayPhanHoi(getNgayPhanHoi());

		luanChuyenImpl.resetOriginalValues();

		return luanChuyenImpl;
	}

	@Override
	public int compareTo(LuanChuyen luanChuyen) {
		long primaryKey = luanChuyen.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LuanChuyen)) {
			return false;
		}

		LuanChuyen luanChuyen = (LuanChuyen)obj;

		long primaryKey = luanChuyen.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<LuanChuyen> toCacheModel() {
		LuanChuyenCacheModel luanChuyenCacheModel = new LuanChuyenCacheModel();

		luanChuyenCacheModel.Id = getId();

		luanChuyenCacheModel.KieuVanBan = getKieuVanBan();

		String KieuVanBan = luanChuyenCacheModel.KieuVanBan;

		if ((KieuVanBan != null) && (KieuVanBan.length() == 0)) {
			luanChuyenCacheModel.KieuVanBan = null;
		}

		luanChuyenCacheModel.IdVanBan = getIdVanBan();

		Date NgayGui = getNgayGui();

		if (NgayGui != null) {
			luanChuyenCacheModel.NgayGui = NgayGui.getTime();
		}
		else {
			luanChuyenCacheModel.NgayGui = Long.MIN_VALUE;
		}

		Date NgayNhan = getNgayNhan();

		if (NgayNhan != null) {
			luanChuyenCacheModel.NgayNhan = NgayNhan.getTime();
		}
		else {
			luanChuyenCacheModel.NgayNhan = Long.MIN_VALUE;
		}

		luanChuyenCacheModel.NguoiGui = getNguoiGui();

		String NguoiGui = luanChuyenCacheModel.NguoiGui;

		if ((NguoiGui != null) && (NguoiGui.length() == 0)) {
			luanChuyenCacheModel.NguoiGui = null;
		}

		luanChuyenCacheModel.NguoiNhan = getNguoiNhan();

		String NguoiNhan = luanChuyenCacheModel.NguoiNhan;

		if ((NguoiNhan != null) && (NguoiNhan.length() == 0)) {
			luanChuyenCacheModel.NguoiNhan = null;
		}

		luanChuyenCacheModel.YKien = getYKien();

		String YKien = luanChuyenCacheModel.YKien;

		if ((YKien != null) && (YKien.length() == 0)) {
			luanChuyenCacheModel.YKien = null;
		}

		Date HanXuLi = getHanXuLi();

		if (HanXuLi != null) {
			luanChuyenCacheModel.HanXuLi = HanXuLi.getTime();
		}
		else {
			luanChuyenCacheModel.HanXuLi = Long.MIN_VALUE;
		}

		luanChuyenCacheModel.YKienPhanHoi = getYKienPhanHoi();

		String YKienPhanHoi = luanChuyenCacheModel.YKienPhanHoi;

		if ((YKienPhanHoi != null) && (YKienPhanHoi.length() == 0)) {
			luanChuyenCacheModel.YKienPhanHoi = null;
		}

		Date NgayPhanHoi = getNgayPhanHoi();

		if (NgayPhanHoi != null) {
			luanChuyenCacheModel.NgayPhanHoi = NgayPhanHoi.getTime();
		}
		else {
			luanChuyenCacheModel.NgayPhanHoi = Long.MIN_VALUE;
		}

		return luanChuyenCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{Id=");
		sb.append(getId());
		sb.append(", KieuVanBan=");
		sb.append(getKieuVanBan());
		sb.append(", IdVanBan=");
		sb.append(getIdVanBan());
		sb.append(", NgayGui=");
		sb.append(getNgayGui());
		sb.append(", NgayNhan=");
		sb.append(getNgayNhan());
		sb.append(", NguoiGui=");
		sb.append(getNguoiGui());
		sb.append(", NguoiNhan=");
		sb.append(getNguoiNhan());
		sb.append(", YKien=");
		sb.append(getYKien());
		sb.append(", HanXuLi=");
		sb.append(getHanXuLi());
		sb.append(", YKienPhanHoi=");
		sb.append(getYKienPhanHoi());
		sb.append(", NgayPhanHoi=");
		sb.append(getNgayPhanHoi());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("ispace.model.LuanChuyen");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>Id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>KieuVanBan</column-name><column-value><![CDATA[");
		sb.append(getKieuVanBan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>IdVanBan</column-name><column-value><![CDATA[");
		sb.append(getIdVanBan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>NgayGui</column-name><column-value><![CDATA[");
		sb.append(getNgayGui());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>NgayNhan</column-name><column-value><![CDATA[");
		sb.append(getNgayNhan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>NguoiGui</column-name><column-value><![CDATA[");
		sb.append(getNguoiGui());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>NguoiNhan</column-name><column-value><![CDATA[");
		sb.append(getNguoiNhan());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>YKien</column-name><column-value><![CDATA[");
		sb.append(getYKien());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>HanXuLi</column-name><column-value><![CDATA[");
		sb.append(getHanXuLi());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>YKienPhanHoi</column-name><column-value><![CDATA[");
		sb.append(getYKienPhanHoi());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>NgayPhanHoi</column-name><column-value><![CDATA[");
		sb.append(getNgayPhanHoi());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LuanChuyen.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LuanChuyen.class
		};
	private long _Id;
	private String _KieuVanBan;
	private long _IdVanBan;
	private Date _NgayGui;
	private Date _NgayNhan;
	private String _NguoiGui;
	private String _NguoiNhan;
	private String _YKien;
	private Date _HanXuLi;
	private String _YKienPhanHoi;
	private Date _NgayPhanHoi;
	private LuanChuyen _escapedModel;
}